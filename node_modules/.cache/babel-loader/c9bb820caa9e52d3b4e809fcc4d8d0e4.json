{"ast":null,"code":"import _slicedToArray from \"/Users/ted.marov/workspace/nss-day-cohort-44.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ted.marov/workspace/nss-day-cohort-44.github.io/src/components/home/studentCapstone.js\";\nimport React from 'react';\nimport Iframe from 'react-iframe';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { blue } from '@material-ui/core/colors';\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\nconst useStyles = makeStyles({\n  closeButton: {\n    position: 'absolute',\n    right: 10,\n    top: 10,\n    color: \"gray\"\n  }\n});\n\nfunction SimpleDialog(props) {\n  const classes = useStyles();\n  const onClose = props.onClose,\n        selectedValue = props.selectedValue,\n        open = props.open;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  return React.createElement(Dialog, {\n    onClose: handleClose,\n    \"aria-labelledby\": \"simple-dialog-title\",\n    open: open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"simple-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"\".concat(props.student.firstName, \" \").concat(props.student.lastName, \" Final Capstone\")), React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.closeButton,\n    onClick: onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(CloseIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })), React.createElement(Iframe, {\n    url: \"https://www.youtube.com/embed/\".concat(props.student.capstoneURL),\n    width: \"600\",\n    height: \"360\",\n    className: \"capstone-vid\",\n    display: \"initial\",\n    position: \"relative\",\n    allowfullscreen: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }));\n}\n\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired\n};\nexport default function CapstoneDialog(props) {\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        open = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  const _React$useState3 = React.useState(emails[1]),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        selectedValue = _React$useState4[0],\n        setSelectedValue = _React$useState4[1];\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"outlined\",\n    className: \"btn-capstone\",\n    onClick: handleClickOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Capstone Video Demo\"), React.createElement(SimpleDialog, {\n    selectedValue: selectedValue,\n    open: open,\n    onClose: handleClose,\n    student: props.student,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/ted.marov/workspace/nss-day-cohort-44.github.io/src/components/home/studentCapstone.js"],"names":["React","Iframe","PropTypes","makeStyles","Button","DialogTitle","Dialog","IconButton","CloseIcon","blue","emails","useStyles","closeButton","position","right","top","color","SimpleDialog","props","classes","onClose","selectedValue","open","handleClose","student","firstName","lastName","capstoneURL","propTypes","func","isRequired","bool","string","CapstoneDialog","useState","setOpen","setSelectedValue","handleClickOpen","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Iframe from 'react-iframe'\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { blue } from '@material-ui/core/colors';\n\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\nconst useStyles = makeStyles({\n  closeButton: {\n    position: 'absolute',\n    right: 10,\n    top: 10,\n    color: \"gray\",\n  }\n});\n\nfunction SimpleDialog(props) {\n  const classes = useStyles();\n  const { onClose, selectedValue, open } = props;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n      <DialogTitle id=\"simple-dialog-title\">{`${props.student.firstName} ${props.student.lastName} Final Capstone`}</DialogTitle>\n      <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n        <CloseIcon />\n      </IconButton>\n      <Iframe url={`https://www.youtube.com/embed/${props.student.capstoneURL}`}\n        width=\"600\"\n        height=\"360\"\n        className=\"capstone-vid\"\n        display=\"initial\"\n        position=\"relative\"\n        allowfullscreen\n        />\n    </Dialog>\n  );\n}\n\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired,\n};\n\nexport default function CapstoneDialog(props) {\n  const [open, setOpen] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState(emails[1]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (value) => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" className=\"btn-capstone\" onClick={handleClickOpen}>\n        Capstone Video Demo\n      </Button>\n      <SimpleDialog selectedValue={selectedValue} open={open} onClose={handleClose} student={props.student}/>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}